"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-fast-compare";
exports.ids = ["vendor-chunks/react-fast-compare"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-fast-compare/index.js":
/*!**************************************************!*\
  !*** ./node_modules/react-fast-compare/index.js ***!
  \**************************************************/
/***/ ((module) => {

eval("\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== \"undefined\";\nfunction equal(a, b) {\n    // fast-deep-equal index.js 2.0.1\n    if (a === b) return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = isArray(a), arrB = isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length) return false;\n            for(i = length; i-- !== 0;)if (!equal(a[i], b[i])) return false;\n            return true;\n        }\n        if (arrA != arrB) return false;\n        var dateA = a instanceof Date, dateB = b instanceof Date;\n        if (dateA != dateB) return false;\n        if (dateA && dateB) return a.getTime() == b.getTime();\n        var regexpA = a instanceof RegExp, regexpB = b instanceof RegExp;\n        if (regexpA != regexpB) return false;\n        if (regexpA && regexpB) return a.toString() == b.toString();\n        var keys = keyList(a);\n        length = keys.length;\n        if (length !== keyList(b).length) return false;\n        for(i = length; i-- !== 0;)if (!hasProp.call(b, keys[i])) return false;\n        // end fast-deep-equal\n        // start react-fast-compare\n        // custom handling for DOM elements\n        if (hasElementType && a instanceof Element && b instanceof Element) return a === b;\n        // custom handling for React\n        for(i = length; i-- !== 0;){\n            key = keys[i];\n            if (key === \"_owner\" && a.$$typeof) {\n                continue;\n            } else {\n                // all other properties should be traversed as usual\n                if (!equal(a[key], b[key])) return false;\n            }\n        }\n        // end react-fast-compare\n        // fast-deep-equal index.js 2.0.1\n        return true;\n    }\n    return a !== a && b !== b;\n}\n// end fast-deep-equal\nmodule.exports = function exportedEqual(a, b) {\n    try {\n        return equal(a, b);\n    } catch (error) {\n        if (error.message && error.message.match(/stack|recursion/i) || error.number === -2146828260) {\n            // warn on circular references, don't crash\n            // browsers give this different errors name and messages:\n            // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n            // firefox: \"InternalError\", too much recursion\"\n            // edge: \"Error\", \"Out of stack space\"\n            console.warn(\"Warning: react-fast-compare does not handle circular references.\", error.name, error.message);\n            return false;\n        }\n        // some other error. we should definitely know about these\n        throw error;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZmFzdC1jb21wYXJlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsVUFBVUMsTUFBTUQsT0FBTztBQUMzQixJQUFJRSxVQUFVQyxPQUFPQyxJQUFJO0FBQ3pCLElBQUlDLFVBQVVGLE9BQU9HLFNBQVMsQ0FBQ0MsY0FBYztBQUM3QyxJQUFJQyxpQkFBaUIsT0FBT0MsWUFBWTtBQUV4QyxTQUFTQyxNQUFNQyxDQUFDLEVBQUVDLENBQUM7SUFDakIsaUNBQWlDO0lBQ2pDLElBQUlELE1BQU1DLEdBQUcsT0FBTztJQUVwQixJQUFJRCxLQUFLQyxLQUFLLE9BQU9ELEtBQUssWUFBWSxPQUFPQyxLQUFLLFVBQVU7UUFDMUQsSUFBSUMsT0FBT2IsUUFBUVcsSUFDZkcsT0FBT2QsUUFBUVksSUFDZkcsR0FDQUMsUUFDQUM7UUFFSixJQUFJSixRQUFRQyxNQUFNO1lBQ2hCRSxTQUFTTCxFQUFFSyxNQUFNO1lBQ2pCLElBQUlBLFVBQVVKLEVBQUVJLE1BQU0sRUFBRSxPQUFPO1lBQy9CLElBQUtELElBQUlDLFFBQVFELFFBQVEsR0FDdkIsSUFBSSxDQUFDTCxNQUFNQyxDQUFDLENBQUNJLEVBQUUsRUFBRUgsQ0FBQyxDQUFDRyxFQUFFLEdBQUcsT0FBTztZQUNqQyxPQUFPO1FBQ1Q7UUFFQSxJQUFJRixRQUFRQyxNQUFNLE9BQU87UUFFekIsSUFBSUksUUFBUVAsYUFBYVEsTUFDckJDLFFBQVFSLGFBQWFPO1FBQ3pCLElBQUlELFNBQVNFLE9BQU8sT0FBTztRQUMzQixJQUFJRixTQUFTRSxPQUFPLE9BQU9ULEVBQUVVLE9BQU8sTUFBTVQsRUFBRVMsT0FBTztRQUVuRCxJQUFJQyxVQUFVWCxhQUFhWSxRQUN2QkMsVUFBVVosYUFBYVc7UUFDM0IsSUFBSUQsV0FBV0UsU0FBUyxPQUFPO1FBQy9CLElBQUlGLFdBQVdFLFNBQVMsT0FBT2IsRUFBRWMsUUFBUSxNQUFNYixFQUFFYSxRQUFRO1FBRXpELElBQUlyQixPQUFPRixRQUFRUztRQUNuQkssU0FBU1osS0FBS1ksTUFBTTtRQUVwQixJQUFJQSxXQUFXZCxRQUFRVSxHQUFHSSxNQUFNLEVBQzlCLE9BQU87UUFFVCxJQUFLRCxJQUFJQyxRQUFRRCxRQUFRLEdBQ3ZCLElBQUksQ0FBQ1YsUUFBUXFCLElBQUksQ0FBQ2QsR0FBR1IsSUFBSSxDQUFDVyxFQUFFLEdBQUcsT0FBTztRQUN4QyxzQkFBc0I7UUFFdEIsMkJBQTJCO1FBQzNCLG1DQUFtQztRQUNuQyxJQUFJUCxrQkFBa0JHLGFBQWFGLFdBQVdHLGFBQWFILFNBQ3pELE9BQU9FLE1BQU1DO1FBRWYsNEJBQTRCO1FBQzVCLElBQUtHLElBQUlDLFFBQVFELFFBQVEsR0FBSTtZQUMzQkUsTUFBTWIsSUFBSSxDQUFDVyxFQUFFO1lBQ2IsSUFBSUUsUUFBUSxZQUFZTixFQUFFZ0IsUUFBUSxFQUFFO2dCQUtsQztZQUNGLE9BQU87Z0JBQ0wsb0RBQW9EO2dCQUNwRCxJQUFJLENBQUNqQixNQUFNQyxDQUFDLENBQUNNLElBQUksRUFBRUwsQ0FBQyxDQUFDSyxJQUFJLEdBQUcsT0FBTztZQUNyQztRQUNGO1FBQ0EseUJBQXlCO1FBRXpCLGlDQUFpQztRQUNqQyxPQUFPO0lBQ1Q7SUFFQSxPQUFPTixNQUFNQSxLQUFLQyxNQUFNQTtBQUMxQjtBQUNBLHNCQUFzQjtBQUV0QmdCLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxjQUFjbkIsQ0FBQyxFQUFFQyxDQUFDO0lBQzFDLElBQUk7UUFDRixPQUFPRixNQUFNQyxHQUFHQztJQUNsQixFQUFFLE9BQU9tQixPQUFPO1FBQ2QsSUFBSSxNQUFPQyxPQUFPLElBQUlELE1BQU1DLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDLHVCQUF5QkYsTUFBTUcsTUFBTSxLQUFLLENBQUMsWUFBYTtZQUNoRywyQ0FBMkM7WUFDM0MseURBQXlEO1lBQ3pELGtFQUFrRTtZQUNsRSxnREFBZ0Q7WUFDaEQsc0NBQXNDO1lBQ3RDQyxRQUFRQyxJQUFJLENBQUMsb0VBQW9FTCxNQUFNTSxJQUFJLEVBQUVOLE1BQU1DLE9BQU87WUFDMUcsT0FBTztRQUNUO1FBQ0EsMERBQTBEO1FBQzFELE1BQU1EO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yZWFjdC1mYXN0LWNvbXBhcmUvaW5kZXguanM/NGY0OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbnZhciBrZXlMaXN0ID0gT2JqZWN0LmtleXM7XG52YXIgaGFzUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgaGFzRWxlbWVudFR5cGUgPSB0eXBlb2YgRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbmZ1bmN0aW9uIGVxdWFsKGEsIGIpIHtcbiAgLy8gZmFzdC1kZWVwLWVxdWFsIGluZGV4LmpzIDIuMC4xXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09ICdvYmplY3QnICYmIHR5cGVvZiBiID09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFyckEgPSBpc0FycmF5KGEpXG4gICAgICAsIGFyckIgPSBpc0FycmF5KGIpXG4gICAgICAsIGlcbiAgICAgICwgbGVuZ3RoXG4gICAgICAsIGtleTtcblxuICAgIGlmIChhcnJBICYmIGFyckIpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYXJyQSAhPSBhcnJCKSByZXR1cm4gZmFsc2U7XG5cbiAgICB2YXIgZGF0ZUEgPSBhIGluc3RhbmNlb2YgRGF0ZVxuICAgICAgLCBkYXRlQiA9IGIgaW5zdGFuY2VvZiBEYXRlO1xuICAgIGlmIChkYXRlQSAhPSBkYXRlQikgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChkYXRlQSAmJiBkYXRlQikgcmV0dXJuIGEuZ2V0VGltZSgpID09IGIuZ2V0VGltZSgpO1xuXG4gICAgdmFyIHJlZ2V4cEEgPSBhIGluc3RhbmNlb2YgUmVnRXhwXG4gICAgICAsIHJlZ2V4cEIgPSBiIGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIGlmIChyZWdleHBBICE9IHJlZ2V4cEIpIHJldHVybiBmYWxzZTtcbiAgICBpZiAocmVnZXhwQSAmJiByZWdleHBCKSByZXR1cm4gYS50b1N0cmluZygpID09IGIudG9TdHJpbmcoKTtcblxuICAgIHZhciBrZXlzID0ga2V5TGlzdChhKTtcbiAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcblxuICAgIGlmIChsZW5ndGggIT09IGtleUxpc3QoYikubGVuZ3RoKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICAvLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbiAgICAvLyBzdGFydCByZWFjdC1mYXN0LWNvbXBhcmVcbiAgICAvLyBjdXN0b20gaGFuZGxpbmcgZm9yIERPTSBlbGVtZW50c1xuICAgIGlmIChoYXNFbGVtZW50VHlwZSAmJiBhIGluc3RhbmNlb2YgRWxlbWVudCAmJiBiIGluc3RhbmNlb2YgRWxlbWVudClcbiAgICAgIHJldHVybiBhID09PSBiO1xuXG4gICAgLy8gY3VzdG9tIGhhbmRsaW5nIGZvciBSZWFjdFxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAga2V5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChrZXkgPT09ICdfb3duZXInICYmIGEuJCR0eXBlb2YpIHtcbiAgICAgICAgLy8gUmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUmVhY3QgZWxlbWVudHMnIF9vd25lci5cbiAgICAgICAgLy8gIF9vd25lciBjb250YWlucyBjaXJjdWxhciByZWZlcmVuY2VzXG4gICAgICAgIC8vIGFuZCBpcyBub3QgbmVlZGVkIHdoZW4gY29tcGFyaW5nIHRoZSBhY3R1YWwgZWxlbWVudHMgKGFuZCBub3QgdGhlaXIgb3duZXJzKVxuICAgICAgICAvLyAuJCR0eXBlb2YgYW5kIC5fc3RvcmUgb24ganVzdCByZWFzb25hYmxlIG1hcmtlcnMgb2YgYSByZWFjdCBlbGVtZW50XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYWxsIG90aGVyIHByb3BlcnRpZXMgc2hvdWxkIGJlIHRyYXZlcnNlZCBhcyB1c3VhbFxuICAgICAgICBpZiAoIWVxdWFsKGFba2V5XSwgYltrZXldKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBlbmQgcmVhY3QtZmFzdC1jb21wYXJlXG5cbiAgICAvLyBmYXN0LWRlZXAtZXF1YWwgaW5kZXguanMgMi4wLjFcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBhICE9PSBhICYmIGIgIT09IGI7XG59XG4vLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXhwb3J0ZWRFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICgoZXJyb3IubWVzc2FnZSAmJiBlcnJvci5tZXNzYWdlLm1hdGNoKC9zdGFja3xyZWN1cnNpb24vaSkpIHx8IChlcnJvci5udW1iZXIgPT09IC0yMTQ2ODI4MjYwKSkge1xuICAgICAgLy8gd2FybiBvbiBjaXJjdWxhciByZWZlcmVuY2VzLCBkb24ndCBjcmFzaFxuICAgICAgLy8gYnJvd3NlcnMgZ2l2ZSB0aGlzIGRpZmZlcmVudCBlcnJvcnMgbmFtZSBhbmQgbWVzc2FnZXM6XG4gICAgICAvLyBjaHJvbWUvc2FmYXJpOiBcIlJhbmdlRXJyb3JcIiwgXCJNYXhpbXVtIGNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiXG4gICAgICAvLyBmaXJlZm94OiBcIkludGVybmFsRXJyb3JcIiwgdG9vIG11Y2ggcmVjdXJzaW9uXCJcbiAgICAgIC8vIGVkZ2U6IFwiRXJyb3JcIiwgXCJPdXQgb2Ygc3RhY2sgc3BhY2VcIlxuICAgICAgY29uc29sZS53YXJuKCdXYXJuaW5nOiByZWFjdC1mYXN0LWNvbXBhcmUgZG9lcyBub3QgaGFuZGxlIGNpcmN1bGFyIHJlZmVyZW5jZXMuJywgZXJyb3IubmFtZSwgZXJyb3IubWVzc2FnZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIHNvbWUgb3RoZXIgZXJyb3IuIHdlIHNob3VsZCBkZWZpbml0ZWx5IGtub3cgYWJvdXQgdGhlc2VcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJpc0FycmF5IiwiQXJyYXkiLCJrZXlMaXN0IiwiT2JqZWN0Iiwia2V5cyIsImhhc1Byb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImhhc0VsZW1lbnRUeXBlIiwiRWxlbWVudCIsImVxdWFsIiwiYSIsImIiLCJhcnJBIiwiYXJyQiIsImkiLCJsZW5ndGgiLCJrZXkiLCJkYXRlQSIsIkRhdGUiLCJkYXRlQiIsImdldFRpbWUiLCJyZWdleHBBIiwiUmVnRXhwIiwicmVnZXhwQiIsInRvU3RyaW5nIiwiY2FsbCIsIiQkdHlwZW9mIiwibW9kdWxlIiwiZXhwb3J0cyIsImV4cG9ydGVkRXF1YWwiLCJlcnJvciIsIm1lc3NhZ2UiLCJtYXRjaCIsIm51bWJlciIsImNvbnNvbGUiLCJ3YXJuIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-fast-compare/index.js\n");

/***/ })

};
;